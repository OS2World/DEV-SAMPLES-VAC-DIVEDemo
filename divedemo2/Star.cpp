/*******************************************************************************
* FILE NAME: Star.cpp                                                          *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Class implementation of the class:                                         *
*     Star- A star                                                             *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _INOTIFEV_
#include <inotifev.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#ifndef _STAR_
#include "Star.hpp"
#endif

#ifndef _IVBDEFS_
#include <ivbdefs.h>
#endif

#ifndef _ITRACE_
#include <itrace.hpp>
#endif


#pragma export (Star::readyId)
const INotificationId Star::readyId = "Star::readyId";

//------------------------------------------------------------------------------
// Star :: Star
//------------------------------------------------------------------------------
#pragma export (Star::Star(ISize const&, int))
Star::Star(ISize const& modelSpaceSize, int numDistances)
{

   userConstructor(modelSpaceSize, numDistances);
}     //end constructor


//------------------------------------------------------------------------------
// Star :: ~Star
//------------------------------------------------------------------------------
#pragma export (Star::~Star())
Star::~Star()
{
   userDestructor();

}

//------------------------------------------------------------------------------
// Star :: initializePart
//------------------------------------------------------------------------------
#pragma export (Star::initializePart())
Star & Star::initializePart()
{
   makeConnections();
   notifyObservers(INotificationEvent(readyId, *this));
   return *this;
}


//------------------------------------------------------------------------------
// Star :: makeConnections
//------------------------------------------------------------------------------
#pragma export (Star::makeConnections())
Boolean Star::makeConnections()
{
   this->enableNotification();

   return true;
}


#include "Star.cpv"
